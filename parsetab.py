
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEATTRIB BET BT COMMA DIF DIVIDE ELSE EQ FUNC ID IF LBR LET LPAREN LT MINUS NUMBER PLUS RBR RETURN RPAREN SEMICOLON TIMES WHILEfunctions : function functions\n                | empty\n    function : FUNC ID LPAREN params RPAREN LBR statements RBRpcall : logic pclist\n             | empty\n     pclist : COMMA logic pclist\n             | empty\n    params : ID plist\n              | empty\n     plist : COMMA ID plist\n             | empty\n    statements : statement statements\n                | empty\n    statement : attrib\n                | if\n                | else\n                | while\n                | return\n                empty : if : IF LPAREN logic RPAREN LBR statements RBRelse : ELSE LBR statements RBRwhile : WHILE LPAREN logic RPAREN LBR statements RBRreturn : RETURN logic SEMICOLONattrib : ID ATTRIB logic SEMICOLONlogic : logic LT logiclogic : logic BT logiclogic : logic LET logiclogic : logic BET logiclogic : logic EQ logiclogic : logic DIF logiclogic : expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : termterm : term TIMES termterm : term DIVIDE termterm : callterm : NUMBERterm : IDcall : ID LPAREN pcall RPAREN term : LPAREN expression RPAREN'
    
_lr_action_items = {'FUNC':([0,2,32,],[4,4,-3,]),'$end':([0,1,2,3,5,32,],[-19,0,-19,-2,-1,-3,]),'ID':([4,7,12,16,20,22,23,24,25,26,30,31,34,35,36,43,48,49,50,51,52,53,54,55,56,57,58,59,61,63,79,80,83,88,89,],[6,8,15,18,18,-14,-15,-16,-17,-18,42,42,42,18,42,42,-23,42,42,42,42,42,42,42,42,42,42,42,-24,-21,18,18,42,-20,-22,]),'LPAREN':([6,27,29,30,31,34,36,42,43,49,50,51,52,53,54,55,56,57,58,59,83,],[7,34,36,43,43,43,43,59,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'RPAREN':([7,8,9,10,11,13,15,17,38,39,40,41,42,45,47,59,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,84,87,90,],[-19,-19,14,-9,-8,-11,-19,-10,-31,-34,-37,-38,-39,62,64,-19,78,-25,-26,-27,-28,-29,-30,-32,-33,-35,-36,81,-19,-5,-41,-40,-4,-7,-19,-6,]),'COMMA':([8,15,38,39,40,41,42,65,66,67,68,69,70,71,72,73,74,76,78,81,87,],[12,12,-31,-34,-37,-38,-39,-25,-26,-27,-28,-29,-30,-32,-33,-35,-36,83,-41,-40,83,]),'LBR':([14,28,62,64,],[16,35,79,80,]),'RBR':([16,19,20,21,22,23,24,25,26,33,35,46,48,61,63,79,80,85,86,88,89,],[-19,32,-19,-13,-14,-15,-16,-17,-18,-12,-19,63,-23,-24,-21,-19,-19,88,89,-20,-22,]),'IF':([16,20,22,23,24,25,26,35,48,61,63,79,80,88,89,],[27,27,-14,-15,-16,-17,-18,27,-23,-24,-21,27,27,-20,-22,]),'ELSE':([16,20,22,23,24,25,26,35,48,61,63,79,80,88,89,],[28,28,-14,-15,-16,-17,-18,28,-23,-24,-21,28,28,-20,-22,]),'WHILE':([16,20,22,23,24,25,26,35,48,61,63,79,80,88,89,],[29,29,-14,-15,-16,-17,-18,29,-23,-24,-21,29,29,-20,-22,]),'RETURN':([16,20,22,23,24,25,26,35,48,61,63,79,80,88,89,],[30,30,-14,-15,-16,-17,-18,30,-23,-24,-21,30,30,-20,-22,]),'ATTRIB':([18,],[31,]),'NUMBER':([30,31,34,36,43,49,50,51,52,53,54,55,56,57,58,59,83,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'SEMICOLON':([37,38,39,40,41,42,44,65,66,67,68,69,70,71,72,73,74,78,81,],[48,-31,-34,-37,-38,-39,61,-25,-26,-27,-28,-29,-30,-32,-33,-35,-36,-41,-40,]),'LT':([37,38,39,40,41,42,44,45,47,65,66,67,68,69,70,71,72,73,74,76,78,81,87,],[49,-31,-34,-37,-38,-39,49,49,49,49,49,49,49,49,49,-32,-33,-35,-36,49,-41,-40,49,]),'BT':([37,38,39,40,41,42,44,45,47,65,66,67,68,69,70,71,72,73,74,76,78,81,87,],[50,-31,-34,-37,-38,-39,50,50,50,50,50,50,50,50,50,-32,-33,-35,-36,50,-41,-40,50,]),'LET':([37,38,39,40,41,42,44,45,47,65,66,67,68,69,70,71,72,73,74,76,78,81,87,],[51,-31,-34,-37,-38,-39,51,51,51,51,51,51,51,51,51,-32,-33,-35,-36,51,-41,-40,51,]),'BET':([37,38,39,40,41,42,44,45,47,65,66,67,68,69,70,71,72,73,74,76,78,81,87,],[52,-31,-34,-37,-38,-39,52,52,52,52,52,52,52,52,52,-32,-33,-35,-36,52,-41,-40,52,]),'EQ':([37,38,39,40,41,42,44,45,47,65,66,67,68,69,70,71,72,73,74,76,78,81,87,],[53,-31,-34,-37,-38,-39,53,53,53,53,53,53,53,53,53,-32,-33,-35,-36,53,-41,-40,53,]),'DIF':([37,38,39,40,41,42,44,45,47,65,66,67,68,69,70,71,72,73,74,76,78,81,87,],[54,-31,-34,-37,-38,-39,54,54,54,54,54,54,54,54,54,-32,-33,-35,-36,54,-41,-40,54,]),'PLUS':([38,39,40,41,42,60,71,72,73,74,78,81,],[55,-34,-37,-38,-39,55,-32,-33,-35,-36,-41,-40,]),'MINUS':([38,39,40,41,42,60,71,72,73,74,78,81,],[56,-34,-37,-38,-39,56,-32,-33,-35,-36,-41,-40,]),'TIMES':([39,40,41,42,73,74,78,81,],[57,-37,-38,-39,-35,-36,-41,-40,]),'DIVIDE':([39,40,41,42,73,74,78,81,],[58,-37,-38,-39,-35,-36,-41,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'functions':([0,2,],[1,5,]),'function':([0,2,],[2,2,]),'empty':([0,2,7,8,15,16,20,35,59,76,79,80,87,],[3,3,10,13,13,21,21,21,77,84,21,21,84,]),'params':([7,],[9,]),'plist':([8,15,],[11,17,]),'statements':([16,20,35,79,80,],[19,33,46,85,86,]),'statement':([16,20,35,79,80,],[20,20,20,20,20,]),'attrib':([16,20,35,79,80,],[22,22,22,22,22,]),'if':([16,20,35,79,80,],[23,23,23,23,23,]),'else':([16,20,35,79,80,],[24,24,24,24,24,]),'while':([16,20,35,79,80,],[25,25,25,25,25,]),'return':([16,20,35,79,80,],[26,26,26,26,26,]),'logic':([30,31,34,36,49,50,51,52,53,54,59,83,],[37,44,45,47,65,66,67,68,69,70,76,87,]),'expression':([30,31,34,36,43,49,50,51,52,53,54,55,56,59,83,],[38,38,38,38,60,38,38,38,38,38,38,71,72,38,38,]),'term':([30,31,34,36,43,49,50,51,52,53,54,55,56,57,58,59,83,],[39,39,39,39,39,39,39,39,39,39,39,39,39,73,74,39,39,]),'call':([30,31,34,36,43,49,50,51,52,53,54,55,56,57,58,59,83,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'pcall':([59,],[75,]),'pclist':([76,87,],[82,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> functions","S'",1,None,None,None),
  ('functions -> function functions','functions',2,'p_func','ply_parser.py',30),
  ('functions -> empty','functions',1,'p_func','ply_parser.py',31),
  ('function -> FUNC ID LPAREN params RPAREN LBR statements RBR','function',8,'p_function','ply_parser.py',42),
  ('pcall -> logic pclist','pcall',2,'p_params_call','ply_parser.py',48),
  ('pcall -> empty','pcall',1,'p_params_call','ply_parser.py',49),
  ('pclist -> COMMA logic pclist','pclist',3,'p_pclist','ply_parser.py',58),
  ('pclist -> empty','pclist',1,'p_pclist','ply_parser.py',59),
  ('params -> ID plist','params',2,'p_params','ply_parser.py',67),
  ('params -> empty','params',1,'p_params','ply_parser.py',68),
  ('plist -> COMMA ID plist','plist',3,'p_plist','ply_parser.py',80),
  ('plist -> empty','plist',1,'p_plist','ply_parser.py',81),
  ('statements -> statement statements','statements',2,'p_s','ply_parser.py',89),
  ('statements -> empty','statements',1,'p_s','ply_parser.py',90),
  ('statement -> attrib','statement',1,'p_statement','ply_parser.py',97),
  ('statement -> if','statement',1,'p_statement','ply_parser.py',98),
  ('statement -> else','statement',1,'p_statement','ply_parser.py',99),
  ('statement -> while','statement',1,'p_statement','ply_parser.py',100),
  ('statement -> return','statement',1,'p_statement','ply_parser.py',101),
  ('empty -> <empty>','empty',0,'p_empty','ply_parser.py',106),
  ('if -> IF LPAREN logic RPAREN LBR statements RBR','if',7,'p_if','ply_parser.py',110),
  ('else -> ELSE LBR statements RBR','else',4,'p_else','ply_parser.py',119),
  ('while -> WHILE LPAREN logic RPAREN LBR statements RBR','while',7,'p_while','ply_parser.py',123),
  ('return -> RETURN logic SEMICOLON','return',3,'p_return','ply_parser.py',135),
  ('attrib -> ID ATTRIB logic SEMICOLON','attrib',4,'p_attrib','ply_parser.py',139),
  ('logic -> logic LT logic','logic',3,'p_logic','ply_parser.py',149),
  ('logic -> logic BT logic','logic',3,'p_logic_bt','ply_parser.py',153),
  ('logic -> logic LET logic','logic',3,'p_logic_let','ply_parser.py',157),
  ('logic -> logic BET logic','logic',3,'p_logic_bet','ply_parser.py',161),
  ('logic -> logic EQ logic','logic',3,'p_logic_eq','ply_parser.py',165),
  ('logic -> logic DIF logic','logic',3,'p_logic_dif','ply_parser.py',169),
  ('logic -> expression','logic',1,'p_logic_expression','ply_parser.py',173),
  ('expression -> expression PLUS expression','expression',3,'p_e','ply_parser.py',177),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','ply_parser.py',181),
  ('expression -> term','expression',1,'p_expression_term','ply_parser.py',186),
  ('term -> term TIMES term','term',3,'p_term','ply_parser.py',190),
  ('term -> term DIVIDE term','term',3,'p_term_div','ply_parser.py',195),
  ('term -> call','term',1,'p_term_call','ply_parser.py',199),
  ('term -> NUMBER','term',1,'p_term_number','ply_parser.py',203),
  ('term -> ID','term',1,'p_term_id','ply_parser.py',207),
  ('call -> ID LPAREN pcall RPAREN','call',4,'p_call','ply_parser.py',217),
  ('term -> LPAREN expression RPAREN','term',3,'p_paren','ply_parser.py',221),
]
